#+TITLE: Building the presentation

* Overview
** Directory layout

#+begin_example
.
├── build
│   ├── css
│   └── js
├── doc
│   └── img
├── docker
├── public
│   ├── css
│   ├── img
│   └── js
└── src
    ├── css
    ├── img
    ├── js
    ├── json
    └── scss
#+end_example
*** =src= - source files

*** =build= - transient build files

*** =public= - final build result

*** Flow between folders
#+begin_src dot :file img/flow-between-folders.png :cmdline -Tpng -Kdot
 digraph dfd{
    node[shape=folder]
    rankdir=LR

    subgraph cluster_src {
        label = "src/"
        src_img [label="img/*"];
    }

    src_img-> proc1:f0;
    proc1 [label="{<f0> 1.0|<f1> Some process here\n\n\n}" shape=Mrecord];
     proc1:f1 -> build_img;

    subgraph cluster_build {
      label = "build/"
      build_img [label="img/."]
    }

    subgraph cluster_public {
      label = "public/"
      public_img [label="img/."]
    }
}
#+end_src

#+RESULTS:
[[file:img/data-flow.png]]

** Edit =org= file
** Build and publish
The final version will be published into the =public/= directory. Calling =gulp= (or =gulp default=) will build the whole presentation.

=C-c C-e v v=

It is important that the presentation is viewed via =http(s)= since some JS libraries will not correctly work when served via the file system.

=gulp serve= will start a small webserver to view the results.
** Required tools
- gulp :: Gulp is used for orchestrating the build
- Docker :: [[file:../src/index.org][index.org]] is compiled to html via [[https://hub.docker.com/repository/docker/xuxxux/org-re-reveal-builder][xuxxux/org-re-reveal-builder]] ([[file:../docker/Dockerfile][Dockerfile]])
* Details
** Tools used
*** =gulp= for building
The build is automated via [[https://gulpjs.com/docs/en/getting-started/quick-start/][gulp]]. The configuration is done via the [[file:../gulpfile.js][gulpfile.js]] and  NPMs [[file:../package.json][package.json]].

- gulpfile.json :: Contains the workflow. The goal is to keep the gulpfile static for a lot of projects.
- package.json :: Configures dependencies for build (=--save-dev=), runtime (=--save-prod=) and configuration like paths, urls, globs.
*** =reveal.js= as presentation framework
[[https://revealjs.com/][reveal.js]] 4.x is used as presentation framework.
*** =emacs= with =org-mode=, =org-babel=, =org-re-reveal= for writing/exporting

*** =Docker= for transforming =org= to =html=
** Build targets
* Building this document
[[file:BUILD.md][BUILD.md]] is generated by exporting [[file:BUILD.org][BUILD.org]] via =C-c C-e m m= (via =org-md-export-to-markdown=).
